# Generated by Django 5.2.5 on 2025-09-28 18:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArgoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_number', models.CharField(db_index=True, help_text='WMO identifier of the float (e.g., 1901820)', max_length=8)),
                ('cycle_number', models.IntegerField(db_index=True, help_text='Mission cycle number for the profile')),
                ('juld_date', models.DateTimeField(db_index=True, help_text='Date and time of the profile measurement (UTC)')),
                ('latitude', models.FloatField(help_text="Best estimate of the profile's latitude")),
                ('longitude', models.FloatField(help_text="Best estimate of the profile's longitude")),
                ('data_mode', models.CharField(help_text='Data type: R (Real-Time), D (Delayed Mode), or A (Adjusted)', max_length=1)),
                ('ocean_name', models.CharField(default='Unknown', help_text='The calculated ocean or sea name (via nearest coordinate lookup).', max_length=100)),
                ('data_centre_ref', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'ARGO Profile',
                'verbose_name_plural': 'ARGO Profiles',
                'ordering': ['platform_number', 'cycle_number'],
                'unique_together': {('platform_number', 'cycle_number')},
            },
        ),
        migrations.CreateModel(
            name='ArgoMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pressure', models.FloatField(db_index=True, help_text='Sea water pressure (dbar), which serves as the depth index')),
                ('temperature', models.FloatField(blank=True, help_text='Unadjusted sea temperature in-situ (°C)', null=True)),
                ('temperature_adjusted', models.FloatField(blank=True, help_text='Adjusted sea temperature in-situ (°C)', null=True)),
                ('salinity', models.FloatField(blank=True, help_text='Unadjusted practical salinity (psu)', null=True)),
                ('salinity_adjusted', models.FloatField(blank=True, help_text='Adjusted practical salinity (psu)', null=True)),
                ('pres_qc', models.CharField(blank=True, help_text='Quality flag for pressure data', max_length=1, null=True)),
                ('temp_qc', models.CharField(blank=True, help_text='Quality flag for temperature data', max_length=1, null=True)),
                ('psal_qc', models.CharField(blank=True, help_text='Quality flag for salinity data', max_length=1, null=True)),
                ('profile', models.ForeignKey(help_text='The profile this measurement belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='data_ingestion.argoprofile')),
            ],
            options={
                'verbose_name': 'ARGO Measurement',
                'verbose_name_plural': 'ARGO Measurements',
                'ordering': ['profile', 'pressure'],
                'unique_together': {('profile', 'pressure')},
            },
        ),
    ]
